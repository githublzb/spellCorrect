DP 复习3题 hdu 2159 2577 1176http://acm.hdu.edu.cn/showproblem.php?pid=2159


   


   #include&lt;iostream&gt;
#include&lt;string&gt;
#include&lt;algorithm&gt;
using namespace std;
#define N 105
int dp[N][N];
int n,m,k,s;
struct MON
{
	int exp;
	int cost;
}g[N];
int solve()
{
	int i,j,t;
	memset(dp,0,sizeof(dp));
	//dp[i][j]=&gt;杀怪i个,忍耐力为j能达到的max经验
	for(j=1;j&lt;=m;j++)
	{
		for(i=1;i&lt;=s;i++)
		{
			for(t=1;t&lt;=k;t++)
				if(j-g[t].cost&gt;=0)
					dp[i][j]=max(dp[i][j],dp[i-1][j-g[t].cost]+g[t].exp);
		}
		if(dp[s][j]&gt;=n)
			break;
	}
	return m-j;
}
int main()
{
	int i;
	while(scanf("%d%d%d%d",&amp;n,&amp;m,&amp;k,&amp;s)!=EOF)
	{
		for(i=1;i&lt;=k;i++)
			scanf("%d%d",&amp;g[i].exp,&amp;g[i].cost);
		printf("%d/n",solve());
	}
} 


   


   http://acm.hdu.edu.cn/showproblem.php?pid=2577


   


   #include&lt;iostream&gt;
#include&lt;string&gt;
#include&lt;algorithm&gt;
using namespace std;
#define N 105
string str;
int dp[N][2];
bool isBig(char c)
{
	if(c&gt;='A'&amp;&amp;c&lt;='Z')
		return true;
	return false;
}
int solve(string s)
{
	int i,j;/*
	dp[0][0]=0;
	dp[0][1]=1;*/
	if(isBig(s[0]))
		dp[0][0]=2,dp[0][1]=2;
	else
		dp[0][0]=1,dp[0][1]=2;
	for(i=1;i&lt;s.length();i++)
	{
		if(isBig(s[i]))
		{
			dp[i][0]=min(dp[i-1][0]+2,dp[i-1][1]+2);
			dp[i][1]=min(dp[i-1][0]+2,dp[i-1][1]+1);
		}
		else
		{
			dp[i][0]=min(dp[i-1][0]+1,dp[i-1][1]+2);
			dp[i][1]=min(dp[i-1][0]+2,dp[i-1][1]+2);
		}
	}
	return min(dp[i-1][0],dp[i-1][1]+1);
}
int main()
{
	int cas;
	scanf("%d",&amp;cas);
	while(cas--)
	{
		cin&gt;&gt;str;
		printf("%d/n",solve(str));
	}
}
 


   


   http://acm.hdu.edu.cn/showproblem.php?pid=1176


   


   #include&lt;iostream&gt;
using namespace std;
int dp[100010][11];
int pie[100010][11];
int i,j,k,m,n;
int max(int a,int b,int c)
{
    if(a&gt;b)
 return a&gt;c?a:c;
    else
 return b&gt;c?b:c;
}
int main()
{
    int cas,t,maxt;
    while(scanf("%d",&amp;cas)!=EOF&amp;&amp;cas)
    {
 maxt=0;
 memset(dp,0,sizeof(dp));
 memset(pie,0,sizeof(pie));
 while(cas--)
 {     
     scanf("%d%d",&amp;k,&amp;t);
     pie[t][k]++;
     if(maxt&lt;t)
  maxt=t;
 }
 for(i=maxt;i&gt;=0;i--)
 {
     dp[i][0]=max(0,dp[i+1][0],dp[i+1][1])+pie[i][0];
     for(j=1;j&lt;=9;j++)
  dp[i][j]=max(dp[i+1][j-1],dp[i+1][j],dp[i+1][j+1])+pie[i][j];
     dp[i][10]=max(0,dp[i+1][9],dp[i+1][10])+pie[i][10];
 }
 printf("%d/n",dp[0][5]); 
    }
    return 0;
}