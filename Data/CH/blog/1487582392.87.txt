PKU 1386 Play on Words 判断图中是否存在欧拉回路、欧拉路http://acm.pku.edu.cn/JudgeOnline/problem?id=1386

Play on Words






	Time Limit: 1000MS

	Memory Limit: 10000K



	Total Submissions: 4633

	Accepted: 1676






   Description

Some of the secret doors contain a very interesting word puzzle. The team of archaeologists has to solve it to open that doors. Because there is no other way to open the doors, the puzzle is very important for us. There is a large number of magnetic plates on every door. Every plate has one word written on it. The plates must be arranged into a sequence in such a way that every word begins with the same letter as the previous word ends. For example, the word ``acm'' can be followed by the word ``motorola''. Your task is to write a computer program that will read the list of words and determine whether it is possible to arrange all of the plates in a sequence (according to the given rule) and consequently to open the door. 


   Input

The input consists of T test cases. The number of them (T) is given on the first line of the input file. Each test case begins with a line containing a single integer number Nthat indicates the number of plates (1 &lt;= N &lt;= 100000). Then exactly Nlines follow, each containing a single word. Each word contains at least two and at most 1000 lowercase characters, that means only letters 'a' through 'z' will appear in the word. The same word may appear several times in the list. 


   Output

Your program has to determine whether it is possible to arrange all the plates in a sequence such that the first letter of each word is equal to the last letter of the previous word. All the plates from the list must be used, each exactly once. The words mentioned several times must be used that number of times. If there exists such an ordering of plates, your program should print the sentence "Ordering is possible.". Otherwise, output the sentence "The door cannot be opened.". 


   Sample Input


   3
2
acm
ibm
3
acm
malform
mouse
2
ok
ok


   Sample Output


   The door cannot be opened.
Ordering is possible.
The door cannot be opened.

   Source

Central Europe 1999

判断图中是否存在欧拉回路、欧拉路

解题思路：记住欧拉图的性质即可，要弱连通判断是否连通图，欧拉路径的点的出入满足的条件是：

1.in-out==1&amp;&amp;out-in==1的个数都为1，其他的in=out,

或者2.所以点的出入度都相等！




   #include&lt;stdio.h&gt;


   #include&lt;string.h&gt;


   #define MAX_SIZE 1008


   #define WORD_SIZE 26


     char word[MAX_SIZE];//word


   int in[WORD_SIZE],out[WORD_SIZE];//indegree,outdegree


   bool con[WORD_SIZE][WORD_SIZE];//connected


   bool visited[WORD_SIZE];//flag


   int N,cnt;


   void Init(){//initial in[],out[]


    int i,j;


    for(cnt=i=0;i&lt;WORD_SIZE;i++){


    in[i]=out[i]=0;


    visited[i]=false;


    for(j=0;j&lt;WORD_SIZE;j++)


    con[i][j]=false;


    }


   }


   void DFS(int u){//check weak connected


    visited[u]=true;


    cnt--;


    for(int v=0;v&lt;WORD_SIZE;v++)


    if(!visited[v]&amp;&amp;con[u][v])


    DFS(v);


   }


   int main(){


    int i,cas,len,first,cnt1,cnt2,cnt3;


    scanf("%d",&amp;cas);


    while(cas--){


    scanf("%d",&amp;N);


    Init();


    cnt1=cnt2=cnt3=0;


    for(i=0;i&lt;N;i++){//get inputs


    scanf("%s",word);


    len=strlen(word);


    in[word[len-1]-'a']++;


    out[word[0]-'a']++;


    con[word[len-1]-'a'][word[0]-'a']=true;


    con[word[0]-'a'][word[len-1]-'a']=true;


    }


    for(first=-1,i=0;i&lt;WORD_SIZE;i++)


    if(in[i]||out[i]){


    if(first&lt;0)first=i;//get the first


    cnt++;//record num of node


    if(in[i]-out[i]==1)//find in[]=out[]+1


    cnt1++;


    if(out[i]-in[i]==1)//find out[]=in[]+1


    cnt2++;


    if(out[i]==in[i])//find out[]=in[]


    cnt3++;


    }


    len=cnt;


    DFS(first);


    if(cnt!=0)puts("The door cannot be opened.");


    else if(cnt1==1&amp;&amp;cnt2==1&amp;&amp;len==cnt3+2||len==cnt3)


    puts("Ordering is possible.");


    else puts("The door cannot be opened.");


    }


   }