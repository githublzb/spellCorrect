CSDN日报20170222——《未来最重要的三个能力》【程序人生】 未来最重要的三个能力 

 作者：张奇



  
   我个人认为人人都该学点编程。

  
  
   我绝不是随口一说，编程绝对是未来最重要的能力之一，如果说未来的人才只能具备三个能力的话，那么我会选择：编程、写作和英语。




   点此阅读全文 





【医学图像】 DICOM世界观●开篇 

作者：张硕



  
   此次设定的题目：DICOM Worldviews，即DICOM世界观，希望通过对医学领域日常事物的观察&amp;记录，对应DICOM官方标准的参考说明，并结合背后的相关理论知识，发现DICOM世界背后的“自然规律”。

  
  
   与此同时给大家描绘一个医学领域的DICOM蓝图，让大家从宏观来把握DICOM的世界，并永葆求知之心和怀疑态度，一同探索医疗信息技术世界的发展。




   点此阅读全文 





【游戏开发】  Unity中动态修改游戏中任意参数的框架 

作者：张鹏举



  
   心血来潮，根据之前做的一个控制台的输入，就想根据控制台的输入，来控制和修改游戏中的某些参数。 

  
  
   目前大部分简单游戏修改参数有数据库，XML，json等各式各样，现在做的是一个可以在游戏过程中，实时修改任意变量的一个东西。 

  
  
   用法很简单，tab按键来打开控制台，输入需要修改的参数就可以，看到参数实时被修改。  

  也可以把它理解成简单的修改器，用于调节参数和可能的命令修改游戏中的参数。 

  
  
   当然，也需要稍微修改一个项目中原有的代码。这个功能已经使用代码一键实现了，并且使用unity中不加入编译的方式，在代码文件名字前加“.”的方式保留了原来的代码。




   点此阅读全文 





【编程语言】 C#开发人员应该知道的13件事情 

作者：葡萄城控件技术团队



  
   本文讲述了C#开发人员应该了解到的13件事情，希望对C#开发人员有所帮助。




   点此阅读全文 





【Android 开发】 Android面试题收集 

作者：jjdxmashl



  
   Android是一种基于Linux的自由及开放源代码的操作系统，主要使用于移动设备，如智能手机和平板电脑，由Google公司和开放手机联盟领导及开发。这里会不断收集和更新Android基础相关的面试题，目前已收集100题。




   点此阅读全文 





【大数据】 Apache Beam WordCount编程实战及源码解读 

作者：王小雷



  
   Apache Beam WordCount编程实战及源码解读,并通过intellij IDEA和terminal两种方式调试运行WordCount程序，Apache Beam对大数据的批处理和流处理，提供一套先进的统一的编程模型，并可以运行大数据处理引擎上。

  
  
   负责公司大数据处理相关架构，但是具有多样性，极大的增加了开发成本，急需统一编程处理，Apache Beam，一处编程，处处运行，故将折腾成果分享出来。

  
  
   完整项目Github源码




   点此阅读全文 





【架构设计】 nginx源码分析之内存池实现原理 

作者：侯继鑫



  
   内存池实质上是接替OS进行内存管理，应用程序申请内存时不再与OS打交道，而是从内存池中申请内存或者释放内存到内存池，因此，内存池在实现的过程中，必然有一部分操作时从OS中申请内存，或者释放内存到OS。




   点此阅读全文 





【好书推荐】 SRE之道：创造软件系统来维护系统运行 

作者：博文视点



  
   大家都知道， 计算机软件系统离开人通常是无法自主运行的。那么，究竟应该如何去运维一个日趋复杂的大型分布式计算系统呢？雇佣系统管理员（sysadmin）运维复杂的计算机系统，是行业内一直以来的普遍做法。而Google 的解决之道是——SRE。 

  
  
   本文作者Ben Treynor Sloss，Google 运维团队的高级副总裁，SRE 名称的发明者，在这里提供了他对SRE 的定义。 




   点此阅读全文 










   CSDN日报20170221——《离开了公司，你还有什么》 



   CSDN日报20170220——《从安卓调整到服务端后的思考》



   CSDN日报20170219——《程序员的沟通之痛》



   CSDN日报20170218——《你真的看懂无领导小组面试了吗？》



   CSDN日报20170217——《辞职信：写给我的“藤野先生”》



  
   关注专栏【CSDN 日报】，获取最新内容。



 
     $(function () {
  $('pre.prettyprint code').each(function () {
      var lines = $(this).text().split('\n').length;
      var $numbering = $('').addClass('pre-numbering').hide();
      $(this).addClass('has-numbering').parent().append($numbering);
      for (i = 1; i <= lines; i++) {
   $numbering.append($('').text(i));
      };
      $numbering.fadeIn(1700);
  });
     });