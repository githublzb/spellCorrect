导弹拦截【问题描述】


   某国为了防御敌国的导弹袭击，发展出一种导弹拦截系统。但是这种导弹拦截系统有一个缺陷：虽然它的第一发炮弹能够到达任意的高度，但是以后每一发炮弹都不能高于前一发的高度。某天，雷达捕捉到敌国的导弹来袭。由于该系统还在试用阶段，所以只有一套系统，因此有可能不能拦截所有的导弹。


   输入导弹依次飞来的高度（雷达给出的高度数据是不大于30000的正整数），计算这套系统最多能拦截多少导弹，如果要拦截所有导弹最少要配备多少套这种导弹拦截系统。


   【输入文件】missile.in


   单独一行列出导弹依次飞来的高度。


   【输出文件】missile.out


   两行，分别是最多能拦截的导弹数，要拦截所有导弹最少要配备的系统数


   【输入样例】


   389207 155 300 299 170 158 65


   【输出样例】


   6


   2


   




   


   #include &quot;iostream&quot;
#include &quot;stdio.h&quot;
#include &quot;math.h&quot;
#include &quot;vector&quot;
#include &quot;queue&quot;
#include &quot;memory.h&quot;
#include &quot;algorithm&quot;
#include &quot;string&quot;
using namespace std;
 
int inc1[200],inc2[200],a[200];
int main()
{
    int n;
    while(scanf(&quot;%d&quot;,&amp;n)!=EOF)
    {
 int i,j;
 for(i=1;i&lt;=n;i++)
     scanf(&quot;%d&quot;,&amp;a[i]);/*输入同学的身高*/
 inc1[1]=1;
 for(i=2;i&lt;=n;i++)
 {
     inc1[i]=1;
     for(j=i-1;j&gt;0;j--)
     {
  if(a[i]&lt;=a[j]&amp;&amp;inc1[i]&lt;inc1[j]+1)
      inc1[i]=inc1[j]+1;
     }
 }
 int ans=0;
 for (i=1;i&lt;=n;i++)
     if(inc1[i]&gt;ans) 
  ans=inc1[i];
 //printf(&quot;%d\n&quot;,ans);
  
 //最长递增子序列的长度即为需要的拦截系统数。因为只有递增子序列的第一个高度是前面无法到达的
 inc2[1] =1;
 for(i=2;i&lt;=n;i++)
 {
     inc2[i]=1;
     for(j=i-1;j&gt;0;j--)
  if(a[j]&lt;a[i]&amp;&amp;inc2[i]&lt;inc2[j]+1)
      inc2[i]=inc2[j]+1;
 }
 int num=0;
 for (i=1;i&lt;=n;i++)
     if(inc2[i]&gt;num) 
  num=inc2[i];
   
 printf(&quot;%d %d\n&quot;,ans,num);
    }
    return 0;
}