hdu 1879 继续畅通工程/************************************************************************/
/* hdu 1879
继续畅通工程


Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)
Total Submission(s): 6017    Accepted Submission(s): 2493




Problem Description
省政府“畅通工程”的目标是使全省任何两个村庄间都可以实现公路交通（但不一定有直接的公路相连，只要能间接通过公路可达即可）。现得到城镇道路统计表，表中列出了任意两城镇间修建道路的费用，以及该道路是否已经修通的状态。现请你编写程序，计算出全省畅通需要的最低成本。




Input
测试输入包含若干测试用例。每个测试用例的第1行给出村庄数目N ( 1&lt; N &lt; 100 )；随后的 N(N-1)/2 行对应村庄间道路的成本及修建状态，每行给4个正整数，分别是两个村庄的编号（从1编号到N），此两村庄间道路的成本，以及修建状态：1表示已建，0表示未建。


当N为0时输入结束。




Output
每个测试用例的输出占一行，输出全省畅通需要的最低成本。




Sample Input
3
1 2 1 0
1 3 2 0
2 3 4 0
3
1 2 1 0
1 3 2 0
2 3 4 1
3
1 2 1 0
1 3 2 1
2 3 4 1
0




Sample Output
3
1
0




Author
ZJU




Source
浙大计算机研究生复试上机考试-2008年
*/
/************************************************************************/
//最小生成树
#include &quot;iostream&quot;
#include &quot;stdio.h&quot;
#include &quot;math.h&quot;
#include &quot;vector&quot;
#include &quot;queue&quot;
#include &quot;memory.h&quot;
#include &quot;algorithm&quot;
#include &quot;string&quot;
using namespace std;
#define N 105


int father[N];
int road[N*(N-1)/2+10][3];
int n,m;


int comp(const void *a,const void *b)
{
	return *((int *)a)-*((int *)b);
}


int cha(int x)
{
	while(x!=father[x])
		x=father[x];
	return x;
}


void bing(int a,int b)
{
	father[cha(a)]=cha(b);//notice! not father[a]=cha(b);
}


int main()
{
	int i,j,a,b,v,f;
	while(scanf(&quot;%d&quot;,&amp;n)!=EOF&amp;&amp;n)
	{
		for(i=1;i&lt;=n;i++)
			father[i]=i;
		m=n*(n-1)/2;
		int cnt=0;
		for (i=0;i&lt;m;i++)
		{
			scanf(&quot;%d%d%d%d&quot;,&amp;a,&amp;b,&amp;v,&amp;f);
			if(f)
				road[cnt][0]=0;
			else
				road[cnt][0]=v;
			road[cnt][1]=a;
			road[cnt][2]=b;
			cnt++;
		}
		qsort(road,cnt,sizeof(int)*3,comp);
		int num=0;
		int sum=0;
		for(i=0;i&lt;m&amp;&amp;num&lt;n-1;i++)
		{
			a=road[i][1];
			b=road[i][2];
			if(cha(a)!=cha(b))
			{
				bing(a,b);
				sum+=road[i][0];
			}
		}
		printf(&quot;%d\n&quot;,sum);
	}
}