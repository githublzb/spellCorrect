SQL 基本操作 删除 修改 刷新SQL常用命令使用方法：      (1)  数据记录筛选：      sql="select  *  from  数据表  where  字段名=字段值  order  by  字段名  [desc]"      sql="select  *  from  数据表  where  字段名  like  '%字段值%'  order  by  字段名  [desc]"      sql="select  top  10  *  from  数据表  where  字段名  order  by  字段名  [desc]"      sql="select  *  from  数据表  where  字段名  in  ('值1','值2','值3')"      sql="select  *  from  数据表  where  字段名  between  值1  and  值2"      (2)  更新数据记录：      sql="update  数据表  set  字段名=字段值  where  条件表达式"      sql="update  数据表  set  字段1=值1,字段2=值2  &hellip;&hellip;  字段n=值n  where  条件表达式"      (3)  删除数据记录：      sql="delete  from  数据表  where  条件表达式"      sql="delete  from  数据表"  (将数据表所有记录删除)      (4)  添加数据记录：      sql="insert  into  数据表  (字段1,字段2,字段3  &hellip;)  valuess  (值1,值2,值3  &hellip;)"      sql="insert  into  目标数据表  select  *  from  源数据表"  (把源数据表的记录添加到目标数据表)      (5)  数据记录统计函数：      AVG(字段名)  得出一个表格栏平均值    COUNT(*|字段名)  对数据行数的统计或对某一栏有值的数据行数统计    MAX(字段名)  取得一个表格栏最大的值    MIN(字段名)  取得一个表格栏最小的值    SUM(字段名)  把数据栏的值相加      引用以上函数的方法：      sql="select  sum(字段名)  as  别名  from  数据表  where  条件表达式"    set  rs=conn.excute(sql)      用  rs("别名")  获取统的计值，其它函数运用同上。      (6)  数据表的建立和删除：      CREATE  TABLE  数据表名称(字段1  类型1(长度),字段2  类型2(长度)  &hellip;&hellip;  )      例：CREATE  TABLE  tab01(name  varchar(50),datetime  default  now())      DROP  TABLE  数据表名称  (永久性删除一个数据表) 


   


   //in form of browseuser
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Configuration;
using System.Data.SqlClient;

namespace Str
{
    public partial class Browseuser : Form
    {
 public Browseuser()
 {
     InitializeComponent();
 }
 
 //define 数据集对象ds用于保存查询返回的结果集
 DataSet ds;
 private void Browseuser_Load(object sender, EventArgs e)
 {
     string strConnection = ConfigurationSettings.AppSettings["connectionstring"];
     SqlConnection objConnection = new SqlConnection(strConnection);
     objConnection.Open();

     string sql = "select userid as userid,name as name from judging";
     SqlDataAdapter adp = new SqlDataAdapter(sql, objConnection);
     ds = new DataSet();
     ds.Clear();
     adp.Fill(ds, "judging");
     dataGridView1.DataSource=ds. Tables[0].DefaultView;
     dataGridView1.Refresh();
     this.judgingTableAdapter.Fill(this.masterDataSet.judging);
 }

 /**********************************************************************************************/
 /*至此完成了将数据库judging中的内容全部显示在新form&mdash;&mdash;Browseuser上*/
 /**********************************************************************************************/

 private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)
 {
 }

 private void button3_Click(object sender, EventArgs e)
 {
     this.Close();
 }
 /***************************************************************************************/
 /***********************************修改记录操作*****************************************/
 /***************************************************************************************/
 private void button1_Click(object sender, EventArgs e)
 {
     if (dataGridView1[0,dataGridView1.CurrentRow.Index] != null)
     {
  //静态变量方法完成窗体间传值
  app.value = dataGridView1.Rows[this.dataGridView1.CurrentRow.Index].Cells[0].Value.ToString();  
  app.value1 = dataGridView1.Rows[this.dataGridView1.CurrentRow.Index].Cells[1].Value.ToString();

  /******************************************************************************/
  //这个模块是为了在Browseuser中不显示password的前提下，能在修改页面中得到password的值
  //换言之，应该在database中找到该对应的值
  /******************************/
  //打开数据库
  string strConnection = ConfigurationSettings.AppSettings["connectionstring"];
  SqlConnection objConnection = new SqlConnection(strConnection);
  objConnection.Open();
  //寻找app.value(id)对应的密码
  string str = "";
  SqlCommand cmd = new SqlCommand("select * from judging where userid='" + app.value + "'", objConnection);
  SqlDataReader read = cmd.ExecuteReader();
  while (read.Read())
  {
      str = read[2].ToString();//读出对应的密码，read[0]-&gt;id;read[1]-&gt;name;read[2]-&gt;psw
  }
  app.value2 = str;
  /***********************************************************************************/

  alterinfo modifyinfo=new alterinfo();
  modifyinfo.Show();
     }
 }

 /***************************************************************************************/
 /***********************************刷新dataGridView操作***********************************/
 /***************************************************************************************/
 private void button4_Click(object sender, EventArgs e)
 {
     string strConnection = ConfigurationSettings.AppSettings["connectionstring"];
     SqlConnection objConnection = new SqlConnection(strConnection);
     objConnection.Open();

     string sql = "select userid as userid,name as name from judging";
     SqlDataAdapter adp = new SqlDataAdapter(sql, objConnection);
     ds = new DataSet();
     ds.Clear();
     adp.Fill(ds, "judging");
     dataGridView1.DataSource = ds.Tables[0].DefaultView;
     dataGridView1.Refresh();
     this.judgingTableAdapter.Fill(this.masterDataSet.judging);
 }
 /***************************************************************************************/
 /***********************************删除记录操作*****************************************/
 /***************************************************************************************/
 private void button2_Click(object sender, EventArgs e)
 {
     app.value = dataGridView1.Rows[this.dataGridView1.CurrentRow.Index].Cells[0].Value.ToString(); 
     //打开数据库
     string strConnection = ConfigurationSettings.AppSettings["connectionstring"];
     SqlConnection objConnection = new SqlConnection(strConnection);
     objConnection.Open();
     //寻找app.value(id)对应的密码

     //找到对应id的数据
     SqlCommand cmd = new SqlCommand("select * from judging where userid='" + app.value + "'", objConnection);
     string sql = "delete from judging where userid=" + app.value;
     cmd.CommandText = sql;
     cmd.ExecuteNonQuery();
     MessageBox.Show("删除成功！");
 }
    }
    public class app//新建的类，为了在其中建立static类型成员   
    {
 public static string value;
 public static string value1;
 public static string value2;
    }   
}
 


   


   //in form alterinfo
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Configuration;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace Str
{
    public partial class alterinfo : Form
    {
 public alterinfo()
 {
     InitializeComponent();
     user.Text = app.value;
     name.Text = app.value1;
     pswtext.Text = app.value2;
 }

 private void button2_Click(object sender, EventArgs e)
 {
     this.Close();
 }
 /***************************************************************************************/
 /**************************************修改信息模块**************************************/
 /***************************************************************************************/

 private void button1_Click(object sender, EventArgs e)
 {
     string modifyname = name.Text;
     string modifypsw = pswtext.Text;

     //打开数据库
     string strConnection = ConfigurationSettings.AppSettings["connectionstring"];
     SqlConnection objConnection = new SqlConnection(strConnection);
     objConnection.Open();
     /*******************************************************************************/

     SqlCommand cmd = new SqlCommand("select * from judging where userid='" + app.value + "'", objConnection);
     string sql = "update judging set name='"+modifyname+"',password='"+modifypsw+"'where userid=" + app.value ;
     cmd.CommandText = sql;
     cmd.ExecuteNonQuery();
     MessageBox.Show("修改信息成功！");
     this.Close();
 }
 private void alterinfo_Load(object sender, EventArgs e)
 {
    
 }
    }
}