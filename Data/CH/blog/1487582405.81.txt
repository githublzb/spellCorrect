Oulipo 模式匹配问题Oulipo


   Time Limit:1000MS Memory Limit:65536KTotal Submit:29 Accepted:17 


   Description 


   The French author Georges Perec (1936&ndash;1982) once wrote a book, La disparition, without the letter 'e'. He was a member of the Oulipo group. A quote from the book: Tout avait Pair normal, mais tout s&rsquo;affirmait faux. Tout avait Fair normal, d&rsquo;abord, puis surgissait l&rsquo;inhumain, l&rsquo;affolant. Il aurait voulu savoir o&ugrave; s&rsquo;articulait l&rsquo;association qui l&rsquo;unissait au roman : stir son tapis, assaillant &agrave; tout instant son imagination, l&rsquo;intuition d&rsquo;un tabou, la vision d&rsquo;un mal obscur, d&rsquo;un quoi vacant, d&rsquo;un non-dit : la vision, l&rsquo;avision d&rsquo;un oubli commandant tout, o&ugrave; s&rsquo;abolissait la raison : tout avait l&rsquo;air normal mais&hellip; Perec would probably have scored high (or rather, low) in the following contest. People are asked to write a perhaps even meaningful text on some subject with as few occurrences of a given &ldquo;word&rdquo; as possible. Our task is to provide the jury with a program that counts these occurrences, in order to obtain a ranking of the competitors. These competitors often write very long texts with nonsense meaning; a sequence of 500,000 consecutive 'T's is not unusual. And they never use spaces. So we want to quickly find out how often a word, i.e., a given string, occurs in a text. More formally: given the alphabet {'A', 'B', 'C', &hellip;, 'Z'} and two finite strings over that alphabet, a word W and a text T, count the number of occurrences of W in T. All the consecutive characters of W must exactly match consecutive characters of T. Occurrences may overlap. 


   Input 


   The first line of the input file contains a single number: the number of test cases to follow. Each test case has the following format: One line with the word W, a string over {'A', 'B', 'C', &hellip;, 'Z'}, with 1 &le; |W| &le; 10,000 (here |W| denotes the length of the string W). One line with the text T, a string over {'A', 'B', 'C', &hellip;, 'Z'}, with |W| &le; |T| &le; 1,000,000. 


   Output 


   For every test case in the input file, the output should contain a single number, on a single line: the number of occurrences of the word W in the text T. 


   Sample Input 


   

   3
BAPC
BAPC
AZA
AZAZAZA
VERDI
AVERDXIVYERDIAN




   


   Sample Output 


   

   1
3
0




   


   Source 


   BAPC 2006 Qualification


   


   经典KMP，顺便写个模板


   


   #include&lt;iostream&gt;
#include&lt;cstring&gt;
using namespace std;

char t[1000001],p[10001];
int next[10001];

void getnext(char p[])
{
	int len = strlen(p);
	next[1] = 0;
	int q;
	int k = 0;
	for(q = 2; q &lt;= len; q++)
	{
		while(k &gt; 0 &amp;&amp; p[k] != p[q - 1])k = next[k];
		if(p[k] == p[q - 1])k++;
		next[q] = k;
	}
}

int KMP(char t[],char p[])//find p in t
{
	int ans = 0;
	int i;
	int n=strlen(t);
	int m = strlen(p);
	if(n == 1 &amp;&amp; m == 1)
	{
		if(t[0] == p[0])return 1;
		else return 0;
	}
	getnext(p);
	int q = 0;
	for(i = 0;i &lt; n; i++)
	{
		while(q &gt; 0 &amp;&amp; p[q] != t[i])
			q = next[q];
		if(p[q] == t[i])q++;
		if(q == m)
		{
			ans++;
			q = next[q];
		}
	}
	return ans;
}

int main()
{
	int T;
	scanf("%d",&amp;T);
	getchar();
	while(T--)
	{ 
		scanf("%s%s",p,t);//find p in t
		printf("%d/n",KMP(t,p));
	}
	return 0;
}