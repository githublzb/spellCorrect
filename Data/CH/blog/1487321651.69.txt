[Machine learning 实验4]linear programming#include &quot;stdio.h&quot;

int main(void)
{
 /*float constrain_set[3][7]={
  {-3,-6,-2,0,0,0,0}, //x0-3x1-6x2-2x3=0 object function
  {3,4,1,1,0,2,0},    //0x0+3x1+4x2+x3+x4=2 constrain 1
  {1,3,2,0,1,1,0}     //0x0+x1+3x2+2x3+x5=1 constrain 2
 };
 int b = 5;
 int beta = 6;
 int row=3;*/
 float constrain_set[][7]={//add the last column to store beta,no use for problem defination
  {-4,-3,0,0,0,0 ,0},//x0-4x1-3x2=0
  { 3, 4,1,0,0,12,0},//0x0+3x1+4x2+x3=12
  { 3, 3,0,1,0,10,0},//0x0+3x1+3x2+x4=10
  { 4, 2,0,0,1,8,0}, //0x0+4x1+2x2+x5=8
 };
 int b=5;
 int beta=6;
 int row=4;


 bool quit = false;
 for(;!quit;)
 {
  //find the min_value &amp;&amp; negative, define column
  float min_value = 0.0;
  int min_column = 0;
  for(int i=0;i&lt;b;++i)
  {
   if(constrain_set[0][i] &lt; min_value)
   {
    min_value = constrain_set[0][i] ;
    min_column = i;
   }
  }
  if(min_value&gt;=0.0)
  {
   break;
  }
  //find the min_beta ,define row
  for(int i=1;i&lt;row;++i)
  {
   constrain_set[i][beta] = constrain_set[i][b]/constrain_set[i][min_column];
  }
  float min_beta = constrain_set[1][beta];
  int min_row = 1;
  for(int i=1;i&lt;row;++i)
  {
   if(constrain_set[i][beta]&lt;min_beta)
   {
    min_beta = constrain_set[i][beta];
    min_row = i;
   }
  }
  float c = constrain_set[min_row][min_column];
  for(int i=0;i&lt;=b;++i)
  {
   constrain_set[min_row][i] /= c;
  }
  for(int i=0;i&lt;row;++i)
  {
   if(i==min_row)continue;
   c = constrain_set[i][min_column];
   for(int j=0;j&lt;=b;++j)
   {
    constrain_set[i][j]-=constrain_set[min_row][j]*c;
   }
  }
  printf(&quot;maxz:%f\n&quot;,constrain_set[0][b]);
 }
 return 0;

}

   以上代码分别为解如下两个线性规划的例题：第一个来自来自参考文献1，第二个来自参考文献2，算法主要受到参考文献2的启发


   max z = 3x1&#43;6x2&#43;2x3


   constrain:


   3x1&#43;4x2&#43;x3 &lt;= 2


   x1&#43;3x2&#43;2x3 = 1


   x1&gt;=0,x2&gt;=0,x3&gt;=0


   和


   max z=4x1&#43;3x2


   constrain:


   3x1&#43;4x2&lt;=12


   3x1&#43;3x2&lt;=10


   4x1&#43;2x2&lt;=8


   x1&gt;=0,x2&gt;=0


   确定换入基的原则是，


   该列的系数为负&#20540;，且最小，例如-6. 表明这个系数对优化结果的影响是正面的，且看上去是最大的。


   该行的beta为最小，这是为了保证变化后优化目标的系数均大于0.


   




   参考文献


   1）《组合数学》第四版 卢开澄



   2）Optimization Techniques An introduction L.R.Foulds 1981 by Springer-Verlag New York Inc