名侦探柯南题目1399：名侦探柯南




题目描述：



   大家一定都看过《名侦探柯南》，我最开始看的是小说版本的，后来出了漫画版本，现在又有了动画片的版本。


   引用彪叔的一条飞信：做男人就要做柯南。变得了正太，飚的到女声；学得好化学，射的了麻醉；踢得好足球，玩得好极限；破得了大案，干得过黑社会；开得了飞机，躲得过机枪；停得了爆炸，引得了雪崩，最牛的是有一个十几年只见了他几面却依旧死心踏地念念不忘的好女友。









       好了，书归正传，现在，柯南又遇到了一个棘手的案子：一个贵族的家里被盗。这个贵族的家里非常有钱，但这家主人的习惯很怪异，他将所有的金银珠宝都磨成粉装到几个分开的袋子里。由于之前并没有记录，所以主人并不知道这次被盗自己损失了多少钱。几天后，盗窃犯被抓住，但是他身上仅有一个盗窃时用的包，盗窃走的财产早已经挥霍一空。很显然，盗窃犯一定会使自己偷走的东西的总价&#20540;最大，柯南虽然断案如神，但是他却无法计算出盗窃犯到底盗走了价&#20540;多少钱的东西。你能帮帮柯南吗？




输入：



       每组测试数据可能有多组输入，对于每一组输入，


    输入的第一行包括两个整数N(1&lt;=N&lt;=100000)，代表主人所拥有的被磨成粉的珠宝的种类数。以及C(1&lt;=C&lt;=10000000)，代表盗窃犯盗窃时所用的包的容量。


    接下来的N行，每行包括两个数W(1&lt;=W&lt;=10000000) 以及V(1&lt;=V&lt;=10000000)，分别代表一类珠宝粉的总重量，以及这类珠宝粉的总价&#20540;。




输出：



       输出盗窃犯所盗走物品的总价&#20540;。




样例输入：

   2 10

   4 12

   8 16

样例输出：

   24

提示：

若最后得到的被盗物品的总价&#20540;不是整数，请你将答案四舍五入后输出。






Notice:

   


   1. 
所谓“每种物品”是幌子，其实每种物品仅有一件


   2. 注意贪心与背包的区别：


   这道题类&#20284;fat mouse trade，即可以取非整数件物品，所以按单价排序，依次拿一件，直到容量不够了选非整数件，贪心即可


   而背包必须选整数件物品，应dp


   3. 
最后要求四舍五入。


   




   


   #include &quot;iostream&quot;  
#include &quot;stdio.h&quot;  
#include &quot;math.h&quot;  
#include &quot;vector&quot;  
#include &quot;queue&quot;  
#include &quot;memory.h&quot;  
#include &quot;algorithm&quot;  
#include &quot;string&quot;  
using namespace std;  
#define N 100001
#define max(a,b) a&gt;b?a:b
#define min(a,b) a&lt;b?a:b
#define eps 1e-7
int n;
double c;
double g[N][3];
 
int comp(const void *a,const void *b)
{
    return *((double *)b+2)&gt;*((double *)a+2)?1:-1;
}

int main()
{
    while(scanf(&quot;%d%lf&quot;,&amp;n,&amp;c)!=EOF)
    {
 int i,j;
 for(i=0;i&lt;n;i++)
 {
     scanf(&quot;%lf%lf&quot;,&amp;g[i][0],&amp;g[i][1]);
     g[i][2]=g[i][1]/g[i][0];
 }
 qsort(g,n,sizeof(double)*3,comp);
 double sum=0;
 for(i=0;i&lt;n;i++)
 {
     if(c&gt;=g[i][0])
     {
  c-=g[i][0];
  sum+=g[i][1];
     }
     else
     {
  sum+=g[i][1]*c/g[i][0];
  break;
     }
 }
 printf(&quot;%d\n&quot;,(int)(sum+0.5));
    }
}