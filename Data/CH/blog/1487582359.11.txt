hdu 1232 畅通工程畅通工程
Time Limit: 4000/2000 MS (Java/Others)Memory Limit: 65536/32768 K (Java/Others)

Total Submission(s): 13081Accepted Submission(s): 6702




Problem Description


某省调查城镇交通状况，得到现有城镇道路统计表，表中列出了每条道路直接连通的城镇。省政府“畅通工程”的目标是使全省任何两个城镇间都可以实现交通（但不一定有直接的道路相连，只要互相间接通过道路可达即可）。问最少还需要建设多少条道路？








Input


测试输入包含若干测试用例。每个测试用例的第1行给出两个正整数，分别是城镇数目N ( &lt; 1000 )和道路数目M；随后的M行对应M条道路，每行给出一对正整数，分别是该条道路直接连通的两个城镇的编号。为简单起见，城镇从1到N编号。

注意:两个城市之间可以有多条道路相通,也就是说

3 3

1 2

1 2

2 1

这种输入也是合法的

当N为0时，输入结束，该用例不被处理。








Output


对每个测试用例，在1行里输出最少还需要建设的道路数目。








Sample Input



   4 2
1 3
4 3
3 3
1 2
1 3
2 3
5 2
1 2
3 5
999 0
0








Sample Output



   1
0
2
998

Hint
Hint
 
Huge input, scanf is recommended.








Source


浙大计算机研究生复试上机考试-2005年






   


   
   #include &quot;iostream&quot;  
#include &quot;stdio.h&quot;  
#include &quot;math.h&quot;  
#include &quot;vector&quot;  
#include &quot;queue&quot;  
#include &quot;memory.h&quot;  
#include &quot;algorithm&quot;  
#include &quot;string&quot;  
using namespace std;  
#define max(a,b) a&gt;b?a:b
#define min(a,b) a&lt;b?a:b

int n;
int father[1010];
bool flag[1010];

int cha(int x)
{
    while(x!=father[x])x=father[x];
    return x;
}
void bing(int a,int b)
{
    father[cha(a)]=cha(b);
}

int main()
{
    int n,m,x,y,i,j;

    while(scanf(&quot;%d&quot;,&amp;n)!=EOF&amp;&amp;n)
    {
 memset(flag,false,sizeof(flag));
 for(i=1;i&lt;=n;i++)
     father[i]=i;
 scanf(&quot;%d&quot;,&amp;m);
 for(i=0;i&lt;m;i++)
 {
     scanf(&quot;%d%d&quot;,&amp;x,&amp;y);
     bing(x,y);
 }
 int count=0;
 for(i=1;i&lt;=n;i++)
 {
     if(flag[cha(i)]==false)
  count++;
     flag[cha(i)]=true;
 }
 cout&lt;&lt;count-1&lt;&lt;endl;
    }
}